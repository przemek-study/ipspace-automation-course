hostname {{ inventory_hostname }}

{% if mc %}
ip multicast-routing
{% endif %}

ip domain-name {{ common.dns.domain }}
{% for srv in common.dns.servers %}
ip name-server {{ srv }}
{% endfor %}

{% for srv in common.ntp.servers %}
ntp server {{ srv }}
{% endfor %}

snmp-server community {{ common.snmp.community }} ro
{% for srv in common.snmp.servers %}
snmp host {{ srv }} {{ common.snmp.community }}
{% endfor %}

{# ==Configure mgmt and loopback== #}
interface Management1
 ip address {{ mgmt }}
 no shut

interface Loopback0
 ip address {{ loop }}

{# ==Configure ports== #}
{% for port in ports %}
interface {{ port.name }}
 description {{ port.desc }}
 no switchport
 ip address {{ port.ip }}
 speed {{ port.speed }}
{%  if mc and port.name in pim %}
 ip pim sparse-mode
{%  endif %}
{% endfor -%}

{# ==Configure trunks== #}
{% if trunks is defined %}
{%  for t, td in trunks.iteritems() %}
interface {{ t }}
 switchport
 switchport mode trunk
 switchport trunk native vlan {{ td.native }}
 switchport trunk allowed vlan {{ td.allowed|join(',') }}
{%  endfor %}
{% endif %}

{# ==Configure BGP== #}
router bgp {{ sites[site].as }}
 router-id {{ loop }}
 network {{ loop }}/32
{% if rr %}
 neighbor LEAF peer-group
 neighbor LEAF remote-as {{ sites[site].as }}
 neighbor LEAF next-hop-self
 neighbor LEAF route-reflector-client
{% endif %}
{% if ibgp is defined %}
{%  for p in ibgp %}
{% set jq = "[?name=='" + p.port + "'].{ myip: ip, peer: peer }" %}
{% set el = ports | json_query(jq) %}
{% set peer_ip = hostvars[el.0.peer] | json_query('ports[*].ip') | ipaddr(el.0.myip) %}
{%   if rr %}
 neighbor {{ peer_ip.0 }} peer-group LEAF
{%   else %}
 neighbor {{ peer_ip.0 }} remote-as {{ sites[site].as }}
{%   endif %}
 neighbor {{ peer_ip.0 }} description {{ el.0.peer }}
{%  endfor %}
{% endif %}

{# ==Configure OSPF== #}
router ospf 1
 router-id {{ loop }}
 network {{ loop }}/32 area 0
{% for p in ports %}
{%  if p.ospf %}
 network {{ p.ip | ipaddr('network/prefix') }} area 0
{%  endif %}
{% endfor %}

{# ==Configure RP== #}
{% if rp is defined %}
ip pim rp-address {{ loop }}
{% endif %}

{# ==MLAG Config== #}
{% if mlag is defined %}
{% set jq = "[?name=='" + mlag.port + "'].{ peer: peer }" %}
{% set mlq = ports | json_query(jq) %}
vlan 4094
 name MLAG VLAN

no spanning-tree vlan 4094

interface vlan 4094
 description {{ inventory_hostname }}_{{ mlq.0.peer }} MLAG
 ip address {{ mlag.ip }}/30

mlag
 local-interface vlan 4094
 peer-address {{ hostvars[mlq.0.peer]['mlag']['ip'] }}
 domain {{ inventory_hostname }}_{{ mlq.0.peer }}
 peer-link {{ mlag.port }}
{% endif %}
